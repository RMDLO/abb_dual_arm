<launch>
  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->
 
  <!-- Non-standard joint names:
       - Create a file [robot_moveit_config]/config/joint_names.yaml
           controller_joint_names: [joint_1, joint_2, ... joint_N] 
       - Update with joint names for your robot (in order expected by rbt controller)
       - and uncomment the following line: -->

  <rosparam command="load" file="$(find abb_irb120_support)/config/joint_names_irb120_3_58.yaml" />
 
  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a robot_ip argument is required -->
  <arg name="sim" default="true" />
  <arg name="robot_ip" unless="$(arg sim)" />

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find abb_irb120_moveit_config)/default_warehouse_mongo_db" />

  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find abb_irb120_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />
  </include>

  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)">
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
  </group>

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <group unless="$(arg sim)">
    <include file="$(find abb_driver)/launch/robot_interface.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
    </include>
  </group>

  <!-- <include file="$(find abb_irb120_support)/launch/robot_interface_download_irb120_3_58.launch" > -->

  <group unless="$(arg sim)">
    <include file="$(find abb_irb120_moveit_config)/launch/abb_irb120_3_58_moveit_controller_manager.launch.xml" >
    </include>
  </group>

  <!-- publish the robot state (tf transforms) -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> -->

  <!-- The 6 lines below doesn't seem to make any difference -->

  <remap from="/mp_controller/follow_joint_trajectory" to="/mp/joint_trajectory_action/joint_trajectory_action" />
  <remap from="/mp_controller/state" to="/mp/feedback_states" />
  <remap from="/mp_controller/command" to="/mp/joint_path_command"/>

  <remap from="/mp_m_controller/follow_joint_trajectory" to="/mp_m/joint_trajectory_action/joint_trajectory_action" />
  <remap from="/mp_m_controller/state" to="/mp_m/feedback_states" />
  <remap from="/mp_m_controller/command" to="/mp_m/joint_path_command"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="mp"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" ns="mp_m"/>

  <include file="$(find abb_irb120_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find abb_irb120_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>
  
  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find abb_irb120_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>